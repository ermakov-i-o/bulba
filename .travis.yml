dist: bionic
language: cpp
branches:
  only:
    - master
git:
  depth: 1

_cmake_env: &_cmake_env
  - MY_CMAKE_DIR=$HOME/cmake
  - MY_CMAKE=$MY_CMAKE_DIR/bin/cmake
_cmake_build_script: &_cmake_build_script
  - |-
    if [ ! -f $MY_CMAKE ]; then
      rm -rf MY_CMAKE_DIR
      wget -P $HOME https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2.tar.gz
      mkdir $MY_CMAKE_DIR
      mkdir $MY_CMAKE_DIR/src
      tar -C $MY_CMAKE_DIR/src -xf $HOME/cmake-3.16.2.tar.gz
      mkdir $MY_CMAKE_DIR/src/cmake-3.16.2/build
      cd $MY_CMAKE_DIR/src/cmake-3.16.2/build
      cmake -DCMAKE_INSTALL_PREFIX=$MY_CMAKE_DIR ..
      cmake --build . --target install
      rm -rf $HOME/cmake-3.16.2.tar.gz $MY_CMAKE_DIR/src/
      cd -
    fi
_cmake_cache_directories: &_cmake_cache_directories
  - $MY_CMAKE_DIR

_windows_mingw_installation: &_windows_mingw_installation
  - |-
    [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
    choco uninstall -y mingw
    choco upgrade --no-progress -y msys2
    export msys2='cmd //C RefreshEnv.cmd '
    export msys2+='& set MSYS=winsymlinks:nativestrict '
    export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
    export mingw64="$msys2 -mingw64 -full-path -here -c \$\* --"
    export msys2+=" -msys2 -c \$\* --"
    $msys2 pacman --sync --noconfirm --needed $MINGW_PACKAGE
    taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
    export MAKE=mingw32-make  # so that Autotools can find it
_windows_mingw_before_cache: &_windows_mingw_before_cache
  - $msys2 pacman --sync --clean --noconfirm
_windows_mingw_cache_directories: &_windows_mingw_cache_directories
  - $HOME/AppData/Local/Temp/chocolatey
  - /C/tools/msys64

jobs:
  include:
    - os: linux
      arch: amd64
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      env:
        - *_cmake_env
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        - CXX_COMPILER="-DCMAKE_CXX_COMPILER=g++-9"
      before_script:
        - *_cmake_build_script
      cache:
        directories:
          - *_cmake_cache_directories

    - os: linux
      arch: arm64
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      env:
        - *_cmake_env
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        - CXX_COMPILER="-DCMAKE_CXX_COMPILER=g++-9"
      before_script:
        - *_cmake_build_script
      cache:
        directories:
          - *_cmake_cache_directories

    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-9
      env:
        - *_cmake_env
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        - CXX_COMPILER="-DCMAKE_CXX_COMPILER=clang++-9"
      before_script:
        - *_cmake_build_script
      cache:
        directories:
          - *_cmake_cache_directories

    - os: windows
      arch: amd64
      env:
        - *_cmake_env
        - BUILD_CONFIG="--config Release"
      before_script:
        - *_cmake_build_script
      cache:
        directories:
          - *_cmake_cache_directories

    - os: windows
      arch: amd64
      env:
        - *_cmake_env
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        - CXX_COMPILER="-DCMAKE_CXX_COMPILER=/C/tools/msys64/mingw64/bin/g++.exe"
        - GENERATOR="-G \"MinGW Makefiles\""
        - MINGW_PACKAGE="mingw-w64-x86_64-gcc"
      before_install:
        - *_windows_mingw_installation
      before_script:
        - *_cmake_build_script
      before_cache:
        - *_windows_mingw_before_cache
      cache:
        directories:
          - *_cmake_cache_directories
          - *_windows_mingw_cache_directories
      script:
        - echo $MY_CMAKE $BUILD_TYPE $CXX_COMPILER -DCMAKE_UNITY_BUILD=ON -S . -B build
        - CMAKE_GENERATOR="MSYS Makefiles" $MY_CMAKE $BUILD_TYPE $CXX_COMPILER -DCMAKE_UNITY_BUILD=ON -DCMAKE_MAKE_PROGRAM=/C/tools/msys64/mingw64/bin/mingw-make32.exe -S . -B build 2>&1
        - $mingw64 $MY_CMAKE --build build -j $(nproc) $BUILD_CONFIG 2>&1

    - os: windows
      arch: amd64
      env:
        - *_cmake_env
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        - CXX_COMPILER="-DCMAKE_CXX_COMPILER=/C/tools/msys64/mingw64/bin/clang++.exe"
        - GENERATOR="-G \"MinGW Makefiles\""
        - MINGW_PACKAGE="mingw-w64-x86_64-clang"
      before_install:
        - *_windows_mingw_installation
      before_script:
        - *_cmake_build_script
      before_cache:
        - *_windows_mingw_before_cache
      cache:
        directories:
          - *_cmake_cache_directories
          - *_windows_mingw_cache_directories
      script:
        - echo $MY_CMAKE $BUILD_TYPE $CXX_COMPILER -G \"MinGW Makefiles\" -DCMAKE_UNITY_BUILD=ON -S . -B build
        - $MY_CMAKE $BUILD_TYPE $CXX_COMPILER -G \"MinGW Makefiles\" -DCMAKE_UNITY_BUILD=ON -S . -B build 2>&1
        - $MY_CMAKE --build build -j $(nproc) $BUILD_CONFIG 2>&1

script:
  - echo $MY_CMAKE $BUILD_TYPE $CXX_COMPILER "$GENERATOR" -DCMAKE_UNITY_BUILD=ON -S . -B build
  - $MY_CMAKE $BUILD_TYPE $CXX_COMPILER "$GENERATOR" -DCMAKE_UNITY_BUILD=ON -S . -B build 2>&1
  - $MY_CMAKE --build build -j $(nproc) $BUILD_CONFIG 2>&1
